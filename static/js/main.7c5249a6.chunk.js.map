{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","_this","props","onSubmit","_this2","this","react_default","a","createElement","className","type","value","onChange","e","setState","target","tabIndex","React","Component","ImageCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","_this$props$image","image","description","urls","likes","style","gridRowEnd","concat","ref","alt","src","small","ImageList","_ref","images","termCount","theimages","responseHeaderMessage","sort","b","console","log","map","components_ImageCard","key","id","App","onSearchSubmit","_callee","response","regenerator_default","wrap","_context","prev","next","unsplash","get","params","query","per_page","sent","data","results","length","stop","marginTop","components_SearchBar","src_components_ImageList","ReactDOM","render","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.7c5249a6.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.unsplash.com',\n  headers: {\n    Authorization: 'Client-ID 910928052572d85d8e8269b91a6e6a711d2c4e40ec7ba94fef29f87ade38f12a',\n  }\n});\n","import React from 'react';\n\nclass SearchBar extends React.Component {\n  state = { term: '' };\n\n  onFormSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.term);\n  }\n\n  render(){\n    return (\n      <div className=\"ui segment\">\n      <form onSubmit={this.onFormSubmit} className=\"ui form\">\n        <div className=\"field\">\n          <label>Image Search</label>\n          <input\n            type=\"text\"\n            value={this.state.term}\n            onChange={e => this.setState({ term: e.target.value})}\n          />\n        </div>\n        <button className=\"ui button\" tabIndex=\"0\">Submit</button>\n      </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar\n","import React from 'react';\n\nclass ImageCard extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = { spans: 0 }\n\n    this.imageRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.imageRef.current.addEventListener('load', this.setSpans);\n  }\n\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n    const spans = Math.ceil(height/10) + 7;\n    this.setState({spans})\n  }\n\n  render(){\n    const { description, urls, likes} = this.props.image\n    return(\n      <div style={{ gridRowEnd: `span ${this.state.spans}`}}>\n        <img ref={this.imageRef} alt={description} src={urls.small}/>\n        <br/>\n        <strong>Likes: </strong>{likes}\n        <br />\n        {description}\n      </div>\n    );\n  }\n}\n\nexport default ImageCard;\n","import './ImageList.css'\nimport React from 'react';\nimport ImageCard from './ImageCard';\n\n\nconst ImageList = ({ images, term, termCount }) => {\n  let theimages = null\n  let responseHeaderMessage = null\n  images.sort((a,b) => b.likes - a.likes);\n  console.log(images)\n\n  if (termCount === 20) {\n    responseHeaderMessage = <div>There are {termCount} results for <strong>\"{term}\"</strong></div>\n    theimages = images.map(image => {\n      return (\n        <ImageCard key={image.id} image={image}/>\n      )\n    });\n  } else if (term) {\n    responseHeaderMessage = <div>Sorry there were fewer than 20 results for <strong>\"{term}\"</strong>.&nbsp;Here are 20 dog pictures instead:</div>\n    theimages = images.map(image => {\n      return (\n        <ImageCard key={image.id} image={image}/>\n      )\n    });\n  }\n\n  return (\n    <div>\n    {responseHeaderMessage}\n    <br />\n    <div className=\"image-list\">{theimages}</div>\n    </div>\n  );\n};\n\nexport default ImageList\n","import React from 'react';\nimport unsplash from '../api/unsplash';\nimport SearchBar from './SearchBar'\nimport ImageList from './ImageList'\n\nclass App extends React.Component {\nstate = {images: [], term: ''};\n\n  onSearchSubmit = async term => {\n    let response = await unsplash.get('search/photos', {\n      params: { query: term,\n                per_page: 20\n      },\n    });\n    const termCount = response.data.results.length;\n\n    if (termCount < 20 ) {\n      response = await unsplash.get('search/photos', {\n        params: { query: 'dog',\n                  per_page: 20\n        },\n      });\n    }\n\n    this.setState({ images: response.data.results, term: term, termCount: termCount})\n  }\n\n  render(){\n    return (\n      <div className=\"ui container\" style={{marginTop: '10px'}}>\n        <SearchBar onSubmit={this.onSearchSubmit}/>\n        <ImageList images = {this.state.images} term = {this.state.term} termCount = {this.state.termCount}/>\n      </div>\n    );\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\n\nReactDOM.render(\n  <App />, document.querySelector('#root')\n);\n"],"sourceRoot":""}